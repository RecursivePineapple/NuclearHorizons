// spotless:off
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: src/main/java/com/recursive_pineapple/nuclear_horizons/reactors/tile/simulator/SimulationConfigProto.proto
// Protobuf Java Version: 4.28.1

package com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator;

public final class SimulatorProtos {
  private SimulatorProtos() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 1,
      /* suffix= */ "",
      SimulatorProtos.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SimulationConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SimulationConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool pulsed = 1;</code>
     * @return The pulsed.
     */
    boolean getPulsed();

    /**
     * <code>bool automated = 2;</code>
     * @return The automated.
     */
    boolean getAutomated();

    /**
     * <code>bool fluid = 3;</code>
     * @return The fluid.
     */
    boolean getFluid();

    /**
     * <code>int32 initialHeat = 4;</code>
     * @return The initialHeat.
     */
    int getInitialHeat();

    /**
     * <code>int32 onPulse = 5;</code>
     * @return The onPulse.
     */
    int getOnPulse();

    /**
     * <code>int32 offPulse = 6;</code>
     * @return The offPulse.
     */
    int getOffPulse();

    /**
     * <code>int32 suspendTemp = 7;</code>
     * @return The suspendTemp.
     */
    int getSuspendTemp();

    /**
     * <code>int32 resumeTemp = 8;</code>
     * @return The resumeTemp.
     */
    int getResumeTemp();

    /**
     * <code>int32 maxSimulationTicks = 9;</code>
     * @return The maxSimulationTicks.
     */
    int getMaxSimulationTicks();

    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig> 
        getComponentsList();
    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig getComponents(int index);
    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    int getComponentsCount();
    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    java.util.List<? extends com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder> 
        getComponentsOrBuilderList();
    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder getComponentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SimulationConfig}
   */
  public static final class SimulationConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SimulationConfig)
      SimulationConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 1,
        /* suffix= */ "",
        SimulationConfig.class.getName());
    }
    // Use SimulationConfig.newBuilder() to construct.
    private SimulationConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SimulationConfig() {
      components_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig.Builder.class);
    }

    public static final int PULSED_FIELD_NUMBER = 1;
    private boolean pulsed_ = false;
    /**
     * <code>bool pulsed = 1;</code>
     * @return The pulsed.
     */
    @java.lang.Override
    public boolean getPulsed() {
      return pulsed_;
    }

    public static final int AUTOMATED_FIELD_NUMBER = 2;
    private boolean automated_ = false;
    /**
     * <code>bool automated = 2;</code>
     * @return The automated.
     */
    @java.lang.Override
    public boolean getAutomated() {
      return automated_;
    }

    public static final int FLUID_FIELD_NUMBER = 3;
    private boolean fluid_ = false;
    /**
     * <code>bool fluid = 3;</code>
     * @return The fluid.
     */
    @java.lang.Override
    public boolean getFluid() {
      return fluid_;
    }

    public static final int INITIALHEAT_FIELD_NUMBER = 4;
    private int initialHeat_ = 0;
    /**
     * <code>int32 initialHeat = 4;</code>
     * @return The initialHeat.
     */
    @java.lang.Override
    public int getInitialHeat() {
      return initialHeat_;
    }

    public static final int ONPULSE_FIELD_NUMBER = 5;
    private int onPulse_ = 0;
    /**
     * <code>int32 onPulse = 5;</code>
     * @return The onPulse.
     */
    @java.lang.Override
    public int getOnPulse() {
      return onPulse_;
    }

    public static final int OFFPULSE_FIELD_NUMBER = 6;
    private int offPulse_ = 0;
    /**
     * <code>int32 offPulse = 6;</code>
     * @return The offPulse.
     */
    @java.lang.Override
    public int getOffPulse() {
      return offPulse_;
    }

    public static final int SUSPENDTEMP_FIELD_NUMBER = 7;
    private int suspendTemp_ = 0;
    /**
     * <code>int32 suspendTemp = 7;</code>
     * @return The suspendTemp.
     */
    @java.lang.Override
    public int getSuspendTemp() {
      return suspendTemp_;
    }

    public static final int RESUMETEMP_FIELD_NUMBER = 8;
    private int resumeTemp_ = 0;
    /**
     * <code>int32 resumeTemp = 8;</code>
     * @return The resumeTemp.
     */
    @java.lang.Override
    public int getResumeTemp() {
      return resumeTemp_;
    }

    public static final int MAXSIMULATIONTICKS_FIELD_NUMBER = 9;
    private int maxSimulationTicks_ = 0;
    /**
     * <code>int32 maxSimulationTicks = 9;</code>
     * @return The maxSimulationTicks.
     */
    @java.lang.Override
    public int getMaxSimulationTicks() {
      return maxSimulationTicks_;
    }

    public static final int COMPONENTS_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig> components_;
    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    @java.lang.Override
    public java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig> getComponentsList() {
      return components_;
    }
    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder> 
        getComponentsOrBuilderList() {
      return components_;
    }
    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    @java.lang.Override
    public int getComponentsCount() {
      return components_.size();
    }
    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    @java.lang.Override
    public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig getComponents(int index) {
      return components_.get(index);
    }
    /**
     * <code>repeated .ComponentConfig components = 10;</code>
     */
    @java.lang.Override
    public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder getComponentsOrBuilder(
        int index) {
      return components_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pulsed_ != false) {
        output.writeBool(1, pulsed_);
      }
      if (automated_ != false) {
        output.writeBool(2, automated_);
      }
      if (fluid_ != false) {
        output.writeBool(3, fluid_);
      }
      if (initialHeat_ != 0) {
        output.writeInt32(4, initialHeat_);
      }
      if (onPulse_ != 0) {
        output.writeInt32(5, onPulse_);
      }
      if (offPulse_ != 0) {
        output.writeInt32(6, offPulse_);
      }
      if (suspendTemp_ != 0) {
        output.writeInt32(7, suspendTemp_);
      }
      if (resumeTemp_ != 0) {
        output.writeInt32(8, resumeTemp_);
      }
      if (maxSimulationTicks_ != 0) {
        output.writeInt32(9, maxSimulationTicks_);
      }
      for (int i = 0; i < components_.size(); i++) {
        output.writeMessage(10, components_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (pulsed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, pulsed_);
      }
      if (automated_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, automated_);
      }
      if (fluid_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, fluid_);
      }
      if (initialHeat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, initialHeat_);
      }
      if (onPulse_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, onPulse_);
      }
      if (offPulse_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, offPulse_);
      }
      if (suspendTemp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, suspendTemp_);
      }
      if (resumeTemp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, resumeTemp_);
      }
      if (maxSimulationTicks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, maxSimulationTicks_);
      }
      for (int i = 0; i < components_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, components_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig)) {
        return super.equals(obj);
      }
      com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig other = (com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig) obj;

      if (getPulsed()
          != other.getPulsed()) return false;
      if (getAutomated()
          != other.getAutomated()) return false;
      if (getFluid()
          != other.getFluid()) return false;
      if (getInitialHeat()
          != other.getInitialHeat()) return false;
      if (getOnPulse()
          != other.getOnPulse()) return false;
      if (getOffPulse()
          != other.getOffPulse()) return false;
      if (getSuspendTemp()
          != other.getSuspendTemp()) return false;
      if (getResumeTemp()
          != other.getResumeTemp()) return false;
      if (getMaxSimulationTicks()
          != other.getMaxSimulationTicks()) return false;
      if (!getComponentsList()
          .equals(other.getComponentsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PULSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPulsed());
      hash = (37 * hash) + AUTOMATED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAutomated());
      hash = (37 * hash) + FLUID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFluid());
      hash = (37 * hash) + INITIALHEAT_FIELD_NUMBER;
      hash = (53 * hash) + getInitialHeat();
      hash = (37 * hash) + ONPULSE_FIELD_NUMBER;
      hash = (53 * hash) + getOnPulse();
      hash = (37 * hash) + OFFPULSE_FIELD_NUMBER;
      hash = (53 * hash) + getOffPulse();
      hash = (37 * hash) + SUSPENDTEMP_FIELD_NUMBER;
      hash = (53 * hash) + getSuspendTemp();
      hash = (37 * hash) + RESUMETEMP_FIELD_NUMBER;
      hash = (53 * hash) + getResumeTemp();
      hash = (37 * hash) + MAXSIMULATIONTICKS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxSimulationTicks();
      if (getComponentsCount() > 0) {
        hash = (37 * hash) + COMPONENTS_FIELD_NUMBER;
        hash = (53 * hash) + getComponentsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SimulationConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SimulationConfig)
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig.Builder.class);
      }

      // Construct using com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        pulsed_ = false;
        automated_ = false;
        fluid_ = false;
        initialHeat_ = 0;
        onPulse_ = 0;
        offPulse_ = 0;
        suspendTemp_ = 0;
        resumeTemp_ = 0;
        maxSimulationTicks_ = 0;
        if (componentsBuilder_ == null) {
          components_ = java.util.Collections.emptyList();
        } else {
          components_ = null;
          componentsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationConfig_descriptor;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig getDefaultInstanceForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig build() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig buildPartial() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig result = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig result) {
        if (componentsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            components_ = java.util.Collections.unmodifiableList(components_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.components_ = components_;
        } else {
          result.components_ = componentsBuilder_.build();
        }
      }

      private void buildPartial0(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.pulsed_ = pulsed_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.automated_ = automated_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.fluid_ = fluid_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.initialHeat_ = initialHeat_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.onPulse_ = onPulse_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.offPulse_ = offPulse_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.suspendTemp_ = suspendTemp_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.resumeTemp_ = resumeTemp_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.maxSimulationTicks_ = maxSimulationTicks_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig) {
          return mergeFrom((com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig other) {
        if (other == com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig.getDefaultInstance()) return this;
        if (other.getPulsed() != false) {
          setPulsed(other.getPulsed());
        }
        if (other.getAutomated() != false) {
          setAutomated(other.getAutomated());
        }
        if (other.getFluid() != false) {
          setFluid(other.getFluid());
        }
        if (other.getInitialHeat() != 0) {
          setInitialHeat(other.getInitialHeat());
        }
        if (other.getOnPulse() != 0) {
          setOnPulse(other.getOnPulse());
        }
        if (other.getOffPulse() != 0) {
          setOffPulse(other.getOffPulse());
        }
        if (other.getSuspendTemp() != 0) {
          setSuspendTemp(other.getSuspendTemp());
        }
        if (other.getResumeTemp() != 0) {
          setResumeTemp(other.getResumeTemp());
        }
        if (other.getMaxSimulationTicks() != 0) {
          setMaxSimulationTicks(other.getMaxSimulationTicks());
        }
        if (componentsBuilder_ == null) {
          if (!other.components_.isEmpty()) {
            if (components_.isEmpty()) {
              components_ = other.components_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureComponentsIsMutable();
              components_.addAll(other.components_);
            }
            onChanged();
          }
        } else {
          if (!other.components_.isEmpty()) {
            if (componentsBuilder_.isEmpty()) {
              componentsBuilder_.dispose();
              componentsBuilder_ = null;
              components_ = other.components_;
              bitField0_ = (bitField0_ & ~0x00000200);
              componentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getComponentsFieldBuilder() : null;
            } else {
              componentsBuilder_.addAllMessages(other.components_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                pulsed_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                automated_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                fluid_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                initialHeat_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                onPulse_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                offPulse_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                suspendTemp_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                resumeTemp_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                maxSimulationTicks_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 82: {
                com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig m =
                    input.readMessage(
                        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.parser(),
                        extensionRegistry);
                if (componentsBuilder_ == null) {
                  ensureComponentsIsMutable();
                  components_.add(m);
                } else {
                  componentsBuilder_.addMessage(m);
                }
                break;
              } // case 82
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean pulsed_ ;
      /**
       * <code>bool pulsed = 1;</code>
       * @return The pulsed.
       */
      @java.lang.Override
      public boolean getPulsed() {
        return pulsed_;
      }
      /**
       * <code>bool pulsed = 1;</code>
       * @param value The pulsed to set.
       * @return This builder for chaining.
       */
      public Builder setPulsed(boolean value) {

        pulsed_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>bool pulsed = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPulsed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pulsed_ = false;
        onChanged();
        return this;
      }

      private boolean automated_ ;
      /**
       * <code>bool automated = 2;</code>
       * @return The automated.
       */
      @java.lang.Override
      public boolean getAutomated() {
        return automated_;
      }
      /**
       * <code>bool automated = 2;</code>
       * @param value The automated to set.
       * @return This builder for chaining.
       */
      public Builder setAutomated(boolean value) {

        automated_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool automated = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutomated() {
        bitField0_ = (bitField0_ & ~0x00000002);
        automated_ = false;
        onChanged();
        return this;
      }

      private boolean fluid_ ;
      /**
       * <code>bool fluid = 3;</code>
       * @return The fluid.
       */
      @java.lang.Override
      public boolean getFluid() {
        return fluid_;
      }
      /**
       * <code>bool fluid = 3;</code>
       * @param value The fluid to set.
       * @return This builder for chaining.
       */
      public Builder setFluid(boolean value) {

        fluid_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>bool fluid = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFluid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fluid_ = false;
        onChanged();
        return this;
      }

      private int initialHeat_ ;
      /**
       * <code>int32 initialHeat = 4;</code>
       * @return The initialHeat.
       */
      @java.lang.Override
      public int getInitialHeat() {
        return initialHeat_;
      }
      /**
       * <code>int32 initialHeat = 4;</code>
       * @param value The initialHeat to set.
       * @return This builder for chaining.
       */
      public Builder setInitialHeat(int value) {

        initialHeat_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 initialHeat = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitialHeat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        initialHeat_ = 0;
        onChanged();
        return this;
      }

      private int onPulse_ ;
      /**
       * <code>int32 onPulse = 5;</code>
       * @return The onPulse.
       */
      @java.lang.Override
      public int getOnPulse() {
        return onPulse_;
      }
      /**
       * <code>int32 onPulse = 5;</code>
       * @param value The onPulse to set.
       * @return This builder for chaining.
       */
      public Builder setOnPulse(int value) {

        onPulse_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 onPulse = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOnPulse() {
        bitField0_ = (bitField0_ & ~0x00000010);
        onPulse_ = 0;
        onChanged();
        return this;
      }

      private int offPulse_ ;
      /**
       * <code>int32 offPulse = 6;</code>
       * @return The offPulse.
       */
      @java.lang.Override
      public int getOffPulse() {
        return offPulse_;
      }
      /**
       * <code>int32 offPulse = 6;</code>
       * @param value The offPulse to set.
       * @return This builder for chaining.
       */
      public Builder setOffPulse(int value) {

        offPulse_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 offPulse = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffPulse() {
        bitField0_ = (bitField0_ & ~0x00000020);
        offPulse_ = 0;
        onChanged();
        return this;
      }

      private int suspendTemp_ ;
      /**
       * <code>int32 suspendTemp = 7;</code>
       * @return The suspendTemp.
       */
      @java.lang.Override
      public int getSuspendTemp() {
        return suspendTemp_;
      }
      /**
       * <code>int32 suspendTemp = 7;</code>
       * @param value The suspendTemp to set.
       * @return This builder for chaining.
       */
      public Builder setSuspendTemp(int value) {

        suspendTemp_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 suspendTemp = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuspendTemp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        suspendTemp_ = 0;
        onChanged();
        return this;
      }

      private int resumeTemp_ ;
      /**
       * <code>int32 resumeTemp = 8;</code>
       * @return The resumeTemp.
       */
      @java.lang.Override
      public int getResumeTemp() {
        return resumeTemp_;
      }
      /**
       * <code>int32 resumeTemp = 8;</code>
       * @param value The resumeTemp to set.
       * @return This builder for chaining.
       */
      public Builder setResumeTemp(int value) {

        resumeTemp_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>int32 resumeTemp = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearResumeTemp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        resumeTemp_ = 0;
        onChanged();
        return this;
      }

      private int maxSimulationTicks_ ;
      /**
       * <code>int32 maxSimulationTicks = 9;</code>
       * @return The maxSimulationTicks.
       */
      @java.lang.Override
      public int getMaxSimulationTicks() {
        return maxSimulationTicks_;
      }
      /**
       * <code>int32 maxSimulationTicks = 9;</code>
       * @param value The maxSimulationTicks to set.
       * @return This builder for chaining.
       */
      public Builder setMaxSimulationTicks(int value) {

        maxSimulationTicks_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxSimulationTicks = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxSimulationTicks() {
        bitField0_ = (bitField0_ & ~0x00000100);
        maxSimulationTicks_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig> components_ =
        java.util.Collections.emptyList();
      private void ensureComponentsIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          components_ = new java.util.ArrayList<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig>(components_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder> componentsBuilder_;

      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig> getComponentsList() {
        if (componentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(components_);
        } else {
          return componentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public int getComponentsCount() {
        if (componentsBuilder_ == null) {
          return components_.size();
        } else {
          return componentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig getComponents(int index) {
        if (componentsBuilder_ == null) {
          return components_.get(index);
        } else {
          return componentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public Builder setComponents(
          int index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentsIsMutable();
          components_.set(index, value);
          onChanged();
        } else {
          componentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public Builder setComponents(
          int index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.set(index, builderForValue.build());
          onChanged();
        } else {
          componentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public Builder addComponents(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentsIsMutable();
          components_.add(value);
          onChanged();
        } else {
          componentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public Builder addComponents(
          int index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentsIsMutable();
          components_.add(index, value);
          onChanged();
        } else {
          componentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public Builder addComponents(
          com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.add(builderForValue.build());
          onChanged();
        } else {
          componentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public Builder addComponents(
          int index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.add(index, builderForValue.build());
          onChanged();
        } else {
          componentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public Builder addAllComponents(
          java.lang.Iterable<? extends com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig> values) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, components_);
          onChanged();
        } else {
          componentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public Builder clearComponents() {
        if (componentsBuilder_ == null) {
          components_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          componentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public Builder removeComponents(int index) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.remove(index);
          onChanged();
        } else {
          componentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder getComponentsBuilder(
          int index) {
        return getComponentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder getComponentsOrBuilder(
          int index) {
        if (componentsBuilder_ == null) {
          return components_.get(index);  } else {
          return componentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public java.util.List<? extends com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder> 
           getComponentsOrBuilderList() {
        if (componentsBuilder_ != null) {
          return componentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(components_);
        }
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder addComponentsBuilder() {
        return getComponentsFieldBuilder().addBuilder(
            com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder addComponentsBuilder(
          int index) {
        return getComponentsFieldBuilder().addBuilder(
            index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .ComponentConfig components = 10;</code>
       */
      public java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder> 
           getComponentsBuilderList() {
        return getComponentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder> 
          getComponentsFieldBuilder() {
        if (componentsBuilder_ == null) {
          componentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder>(
                  components_,
                  ((bitField0_ & 0x00000200) != 0),
                  getParentForChildren(),
                  isClean());
          components_ = null;
        }
        return componentsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SimulationConfig)
    }

    // @@protoc_insertion_point(class_scope:SimulationConfig)
    private static final com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig();
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimulationConfig>
        PARSER = new com.google.protobuf.AbstractParser<SimulationConfig>() {
      @java.lang.Override
      public SimulationConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SimulationConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimulationConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ComponentConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ComponentConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 index = 1;</code>
     * @return The index.
     */
    int getIndex();

    /**
     * <code>int32 item = 2;</code>
     * @return The item.
     */
    int getItem();

    /**
     * <code>bool hasAutomation = 3;</code>
     * @return The hasAutomation.
     */
    boolean getHasAutomation();

    /**
     * <code>int32 initialHeat = 4;</code>
     * @return The initialHeat.
     */
    int getInitialHeat();

    /**
     * <code>int32 replacementThreshold = 5;</code>
     * @return The replacementThreshold.
     */
    int getReplacementThreshold();

    /**
     * <code>int32 reactorPause = 6;</code>
     * @return The reactorPause.
     */
    int getReactorPause();
  }
  /**
   * Protobuf type {@code ComponentConfig}
   */
  public static final class ComponentConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ComponentConfig)
      ComponentConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 1,
        /* suffix= */ "",
        ComponentConfig.class.getName());
    }
    // Use ComponentConfig.newBuilder() to construct.
    private ComponentConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ComponentConfig() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_ = 0;
    /**
     * <code>int32 index = 1;</code>
     * @return The index.
     */
    @java.lang.Override
    public int getIndex() {
      return index_;
    }

    public static final int ITEM_FIELD_NUMBER = 2;
    private int item_ = 0;
    /**
     * <code>int32 item = 2;</code>
     * @return The item.
     */
    @java.lang.Override
    public int getItem() {
      return item_;
    }

    public static final int HASAUTOMATION_FIELD_NUMBER = 3;
    private boolean hasAutomation_ = false;
    /**
     * <code>bool hasAutomation = 3;</code>
     * @return The hasAutomation.
     */
    @java.lang.Override
    public boolean getHasAutomation() {
      return hasAutomation_;
    }

    public static final int INITIALHEAT_FIELD_NUMBER = 4;
    private int initialHeat_ = 0;
    /**
     * <code>int32 initialHeat = 4;</code>
     * @return The initialHeat.
     */
    @java.lang.Override
    public int getInitialHeat() {
      return initialHeat_;
    }

    public static final int REPLACEMENTTHRESHOLD_FIELD_NUMBER = 5;
    private int replacementThreshold_ = 0;
    /**
     * <code>int32 replacementThreshold = 5;</code>
     * @return The replacementThreshold.
     */
    @java.lang.Override
    public int getReplacementThreshold() {
      return replacementThreshold_;
    }

    public static final int REACTORPAUSE_FIELD_NUMBER = 6;
    private int reactorPause_ = 0;
    /**
     * <code>int32 reactorPause = 6;</code>
     * @return The reactorPause.
     */
    @java.lang.Override
    public int getReactorPause() {
      return reactorPause_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0) {
        output.writeInt32(1, index_);
      }
      if (item_ != 0) {
        output.writeInt32(2, item_);
      }
      if (hasAutomation_ != false) {
        output.writeBool(3, hasAutomation_);
      }
      if (initialHeat_ != 0) {
        output.writeInt32(4, initialHeat_);
      }
      if (replacementThreshold_ != 0) {
        output.writeInt32(5, replacementThreshold_);
      }
      if (reactorPause_ != 0) {
        output.writeInt32(6, reactorPause_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (item_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, item_);
      }
      if (hasAutomation_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, hasAutomation_);
      }
      if (initialHeat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, initialHeat_);
      }
      if (replacementThreshold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, replacementThreshold_);
      }
      if (reactorPause_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, reactorPause_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig)) {
        return super.equals(obj);
      }
      com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig other = (com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig) obj;

      if (getIndex()
          != other.getIndex()) return false;
      if (getItem()
          != other.getItem()) return false;
      if (getHasAutomation()
          != other.getHasAutomation()) return false;
      if (getInitialHeat()
          != other.getInitialHeat()) return false;
      if (getReplacementThreshold()
          != other.getReplacementThreshold()) return false;
      if (getReactorPause()
          != other.getReactorPause()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + ITEM_FIELD_NUMBER;
      hash = (53 * hash) + getItem();
      hash = (37 * hash) + HASAUTOMATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasAutomation());
      hash = (37 * hash) + INITIALHEAT_FIELD_NUMBER;
      hash = (53 * hash) + getInitialHeat();
      hash = (37 * hash) + REPLACEMENTTHRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getReplacementThreshold();
      hash = (37 * hash) + REACTORPAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getReactorPause();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ComponentConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ComponentConfig)
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.Builder.class);
      }

      // Construct using com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        index_ = 0;
        item_ = 0;
        hasAutomation_ = false;
        initialHeat_ = 0;
        replacementThreshold_ = 0;
        reactorPause_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentConfig_descriptor;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig getDefaultInstanceForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig build() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig buildPartial() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig result = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.index_ = index_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.item_ = item_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.hasAutomation_ = hasAutomation_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.initialHeat_ = initialHeat_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.replacementThreshold_ = replacementThreshold_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.reactorPause_ = reactorPause_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig) {
          return mergeFrom((com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig other) {
        if (other == com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig.getDefaultInstance()) return this;
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getItem() != 0) {
          setItem(other.getItem());
        }
        if (other.getHasAutomation() != false) {
          setHasAutomation(other.getHasAutomation());
        }
        if (other.getInitialHeat() != 0) {
          setInitialHeat(other.getInitialHeat());
        }
        if (other.getReplacementThreshold() != 0) {
          setReplacementThreshold(other.getReplacementThreshold());
        }
        if (other.getReactorPause() != 0) {
          setReactorPause(other.getReactorPause());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                index_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                item_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                hasAutomation_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                initialHeat_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                replacementThreshold_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                reactorPause_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int index_ ;
      /**
       * <code>int32 index = 1;</code>
       * @return The index.
       */
      @java.lang.Override
      public int getIndex() {
        return index_;
      }
      /**
       * <code>int32 index = 1;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {

        index_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 index = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }

      private int item_ ;
      /**
       * <code>int32 item = 2;</code>
       * @return The item.
       */
      @java.lang.Override
      public int getItem() {
        return item_;
      }
      /**
       * <code>int32 item = 2;</code>
       * @param value The item to set.
       * @return This builder for chaining.
       */
      public Builder setItem(int value) {

        item_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 item = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearItem() {
        bitField0_ = (bitField0_ & ~0x00000002);
        item_ = 0;
        onChanged();
        return this;
      }

      private boolean hasAutomation_ ;
      /**
       * <code>bool hasAutomation = 3;</code>
       * @return The hasAutomation.
       */
      @java.lang.Override
      public boolean getHasAutomation() {
        return hasAutomation_;
      }
      /**
       * <code>bool hasAutomation = 3;</code>
       * @param value The hasAutomation to set.
       * @return This builder for chaining.
       */
      public Builder setHasAutomation(boolean value) {

        hasAutomation_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>bool hasAutomation = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasAutomation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hasAutomation_ = false;
        onChanged();
        return this;
      }

      private int initialHeat_ ;
      /**
       * <code>int32 initialHeat = 4;</code>
       * @return The initialHeat.
       */
      @java.lang.Override
      public int getInitialHeat() {
        return initialHeat_;
      }
      /**
       * <code>int32 initialHeat = 4;</code>
       * @param value The initialHeat to set.
       * @return This builder for chaining.
       */
      public Builder setInitialHeat(int value) {

        initialHeat_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 initialHeat = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitialHeat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        initialHeat_ = 0;
        onChanged();
        return this;
      }

      private int replacementThreshold_ ;
      /**
       * <code>int32 replacementThreshold = 5;</code>
       * @return The replacementThreshold.
       */
      @java.lang.Override
      public int getReplacementThreshold() {
        return replacementThreshold_;
      }
      /**
       * <code>int32 replacementThreshold = 5;</code>
       * @param value The replacementThreshold to set.
       * @return This builder for chaining.
       */
      public Builder setReplacementThreshold(int value) {

        replacementThreshold_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 replacementThreshold = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearReplacementThreshold() {
        bitField0_ = (bitField0_ & ~0x00000010);
        replacementThreshold_ = 0;
        onChanged();
        return this;
      }

      private int reactorPause_ ;
      /**
       * <code>int32 reactorPause = 6;</code>
       * @return The reactorPause.
       */
      @java.lang.Override
      public int getReactorPause() {
        return reactorPause_;
      }
      /**
       * <code>int32 reactorPause = 6;</code>
       * @param value The reactorPause to set.
       * @return This builder for chaining.
       */
      public Builder setReactorPause(int value) {

        reactorPause_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 reactorPause = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearReactorPause() {
        bitField0_ = (bitField0_ & ~0x00000020);
        reactorPause_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ComponentConfig)
    }

    // @@protoc_insertion_point(class_scope:ComponentConfig)
    private static final com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig();
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComponentConfig>
        PARSER = new com.google.protobuf.AbstractParser<ComponentConfig>() {
      @java.lang.Override
      public ComponentConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ComponentConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComponentConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimulationResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SimulationResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 start = 1;</code>
     * @return The start.
     */
    long getStart();

    /**
     * <code>int64 end = 2;</code>
     * @return The end.
     */
    long getEnd();

    /**
     * <code>int64 totalEU = 3;</code>
     * @return The totalEU.
     */
    long getTotalEU();

    /**
     * <code>int32 minEUpT = 4;</code>
     * @return The minEUpT.
     */
    int getMinEUpT();

    /**
     * <code>int32 maxEUpT = 5;</code>
     * @return The maxEUpT.
     */
    int getMaxEUpT();

    /**
     * <code>int64 totalHU = 6;</code>
     * @return The totalHU.
     */
    long getTotalHU();

    /**
     * <code>int32 minHUpS = 7;</code>
     * @return The minHUpS.
     */
    int getMinHUpS();

    /**
     * <code>int32 maxHUpS = 8;</code>
     * @return The maxHUpS.
     */
    int getMaxHUpS();

    /**
     * <code>int64 totalTempSecs = 9;</code>
     * @return The totalTempSecs.
     */
    long getTotalTempSecs();

    /**
     * <code>int32 minTemp = 10;</code>
     * @return The minTemp.
     */
    int getMinTemp();

    /**
     * <code>int32 maxTemp = 11;</code>
     * @return The maxTemp.
     */
    int getMaxTemp();

    /**
     * <code>int64 totalHullHeating = 12;</code>
     * @return The totalHullHeating.
     */
    long getTotalHullHeating();

    /**
     * <code>int64 totalHullCooling = 13;</code>
     * @return The totalHullCooling.
     */
    long getTotalHullCooling();

    /**
     * <code>int32 simTime = 14;</code>
     * @return The simTime.
     */
    int getSimTime();

    /**
     * <code>int32 activeTime = 15;</code>
     * @return The activeTime.
     */
    int getActiveTime();

    /**
     * <code>int32 pausedTime = 16;</code>
     * @return The pausedTime.
     */
    int getPausedTime();

    /**
     * <code>optional int32 timeToNormal = 17;</code>
     * @return Whether the timeToNormal field is set.
     */
    boolean hasTimeToNormal();
    /**
     * <code>optional int32 timeToNormal = 17;</code>
     * @return The timeToNormal.
     */
    int getTimeToNormal();

    /**
     * <code>optional int32 timeToBurn = 18;</code>
     * @return Whether the timeToBurn field is set.
     */
    boolean hasTimeToBurn();
    /**
     * <code>optional int32 timeToBurn = 18;</code>
     * @return The timeToBurn.
     */
    int getTimeToBurn();

    /**
     * <code>optional int32 timeToEvaporate = 19;</code>
     * @return Whether the timeToEvaporate field is set.
     */
    boolean hasTimeToEvaporate();
    /**
     * <code>optional int32 timeToEvaporate = 19;</code>
     * @return The timeToEvaporate.
     */
    int getTimeToEvaporate();

    /**
     * <code>optional int32 timeToHurt = 20;</code>
     * @return Whether the timeToHurt field is set.
     */
    boolean hasTimeToHurt();
    /**
     * <code>optional int32 timeToHurt = 20;</code>
     * @return The timeToHurt.
     */
    int getTimeToHurt();

    /**
     * <code>optional int32 timeToLava = 21;</code>
     * @return Whether the timeToLava field is set.
     */
    boolean hasTimeToLava();
    /**
     * <code>optional int32 timeToLava = 21;</code>
     * @return The timeToLava.
     */
    int getTimeToLava();

    /**
     * <code>optional int32 timeToExplode = 22;</code>
     * @return Whether the timeToExplode field is set.
     */
    boolean hasTimeToExplode();
    /**
     * <code>optional int32 timeToExplode = 22;</code>
     * @return The timeToExplode.
     */
    int getTimeToExplode();

    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult> 
        getComponentsList();
    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult getComponents(int index);
    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    int getComponentsCount();
    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    java.util.List<? extends com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder> 
        getComponentsOrBuilderList();
    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder getComponentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SimulationResult}
   */
  public static final class SimulationResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SimulationResult)
      SimulationResultOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 1,
        /* suffix= */ "",
        SimulationResult.class.getName());
    }
    // Use SimulationResult.newBuilder() to construct.
    private SimulationResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SimulationResult() {
      components_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult.Builder.class);
    }

    private int bitField0_;
    public static final int START_FIELD_NUMBER = 1;
    private long start_ = 0L;
    /**
     * <code>int64 start = 1;</code>
     * @return The start.
     */
    @java.lang.Override
    public long getStart() {
      return start_;
    }

    public static final int END_FIELD_NUMBER = 2;
    private long end_ = 0L;
    /**
     * <code>int64 end = 2;</code>
     * @return The end.
     */
    @java.lang.Override
    public long getEnd() {
      return end_;
    }

    public static final int TOTALEU_FIELD_NUMBER = 3;
    private long totalEU_ = 0L;
    /**
     * <code>int64 totalEU = 3;</code>
     * @return The totalEU.
     */
    @java.lang.Override
    public long getTotalEU() {
      return totalEU_;
    }

    public static final int MINEUPT_FIELD_NUMBER = 4;
    private int minEUpT_ = 0;
    /**
     * <code>int32 minEUpT = 4;</code>
     * @return The minEUpT.
     */
    @java.lang.Override
    public int getMinEUpT() {
      return minEUpT_;
    }

    public static final int MAXEUPT_FIELD_NUMBER = 5;
    private int maxEUpT_ = 0;
    /**
     * <code>int32 maxEUpT = 5;</code>
     * @return The maxEUpT.
     */
    @java.lang.Override
    public int getMaxEUpT() {
      return maxEUpT_;
    }

    public static final int TOTALHU_FIELD_NUMBER = 6;
    private long totalHU_ = 0L;
    /**
     * <code>int64 totalHU = 6;</code>
     * @return The totalHU.
     */
    @java.lang.Override
    public long getTotalHU() {
      return totalHU_;
    }

    public static final int MINHUPS_FIELD_NUMBER = 7;
    private int minHUpS_ = 0;
    /**
     * <code>int32 minHUpS = 7;</code>
     * @return The minHUpS.
     */
    @java.lang.Override
    public int getMinHUpS() {
      return minHUpS_;
    }

    public static final int MAXHUPS_FIELD_NUMBER = 8;
    private int maxHUpS_ = 0;
    /**
     * <code>int32 maxHUpS = 8;</code>
     * @return The maxHUpS.
     */
    @java.lang.Override
    public int getMaxHUpS() {
      return maxHUpS_;
    }

    public static final int TOTALTEMPSECS_FIELD_NUMBER = 9;
    private long totalTempSecs_ = 0L;
    /**
     * <code>int64 totalTempSecs = 9;</code>
     * @return The totalTempSecs.
     */
    @java.lang.Override
    public long getTotalTempSecs() {
      return totalTempSecs_;
    }

    public static final int MINTEMP_FIELD_NUMBER = 10;
    private int minTemp_ = 0;
    /**
     * <code>int32 minTemp = 10;</code>
     * @return The minTemp.
     */
    @java.lang.Override
    public int getMinTemp() {
      return minTemp_;
    }

    public static final int MAXTEMP_FIELD_NUMBER = 11;
    private int maxTemp_ = 0;
    /**
     * <code>int32 maxTemp = 11;</code>
     * @return The maxTemp.
     */
    @java.lang.Override
    public int getMaxTemp() {
      return maxTemp_;
    }

    public static final int TOTALHULLHEATING_FIELD_NUMBER = 12;
    private long totalHullHeating_ = 0L;
    /**
     * <code>int64 totalHullHeating = 12;</code>
     * @return The totalHullHeating.
     */
    @java.lang.Override
    public long getTotalHullHeating() {
      return totalHullHeating_;
    }

    public static final int TOTALHULLCOOLING_FIELD_NUMBER = 13;
    private long totalHullCooling_ = 0L;
    /**
     * <code>int64 totalHullCooling = 13;</code>
     * @return The totalHullCooling.
     */
    @java.lang.Override
    public long getTotalHullCooling() {
      return totalHullCooling_;
    }

    public static final int SIMTIME_FIELD_NUMBER = 14;
    private int simTime_ = 0;
    /**
     * <code>int32 simTime = 14;</code>
     * @return The simTime.
     */
    @java.lang.Override
    public int getSimTime() {
      return simTime_;
    }

    public static final int ACTIVETIME_FIELD_NUMBER = 15;
    private int activeTime_ = 0;
    /**
     * <code>int32 activeTime = 15;</code>
     * @return The activeTime.
     */
    @java.lang.Override
    public int getActiveTime() {
      return activeTime_;
    }

    public static final int PAUSEDTIME_FIELD_NUMBER = 16;
    private int pausedTime_ = 0;
    /**
     * <code>int32 pausedTime = 16;</code>
     * @return The pausedTime.
     */
    @java.lang.Override
    public int getPausedTime() {
      return pausedTime_;
    }

    public static final int TIMETONORMAL_FIELD_NUMBER = 17;
    private int timeToNormal_ = 0;
    /**
     * <code>optional int32 timeToNormal = 17;</code>
     * @return Whether the timeToNormal field is set.
     */
    @java.lang.Override
    public boolean hasTimeToNormal() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 timeToNormal = 17;</code>
     * @return The timeToNormal.
     */
    @java.lang.Override
    public int getTimeToNormal() {
      return timeToNormal_;
    }

    public static final int TIMETOBURN_FIELD_NUMBER = 18;
    private int timeToBurn_ = 0;
    /**
     * <code>optional int32 timeToBurn = 18;</code>
     * @return Whether the timeToBurn field is set.
     */
    @java.lang.Override
    public boolean hasTimeToBurn() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 timeToBurn = 18;</code>
     * @return The timeToBurn.
     */
    @java.lang.Override
    public int getTimeToBurn() {
      return timeToBurn_;
    }

    public static final int TIMETOEVAPORATE_FIELD_NUMBER = 19;
    private int timeToEvaporate_ = 0;
    /**
     * <code>optional int32 timeToEvaporate = 19;</code>
     * @return Whether the timeToEvaporate field is set.
     */
    @java.lang.Override
    public boolean hasTimeToEvaporate() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 timeToEvaporate = 19;</code>
     * @return The timeToEvaporate.
     */
    @java.lang.Override
    public int getTimeToEvaporate() {
      return timeToEvaporate_;
    }

    public static final int TIMETOHURT_FIELD_NUMBER = 20;
    private int timeToHurt_ = 0;
    /**
     * <code>optional int32 timeToHurt = 20;</code>
     * @return Whether the timeToHurt field is set.
     */
    @java.lang.Override
    public boolean hasTimeToHurt() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 timeToHurt = 20;</code>
     * @return The timeToHurt.
     */
    @java.lang.Override
    public int getTimeToHurt() {
      return timeToHurt_;
    }

    public static final int TIMETOLAVA_FIELD_NUMBER = 21;
    private int timeToLava_ = 0;
    /**
     * <code>optional int32 timeToLava = 21;</code>
     * @return Whether the timeToLava field is set.
     */
    @java.lang.Override
    public boolean hasTimeToLava() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 timeToLava = 21;</code>
     * @return The timeToLava.
     */
    @java.lang.Override
    public int getTimeToLava() {
      return timeToLava_;
    }

    public static final int TIMETOEXPLODE_FIELD_NUMBER = 22;
    private int timeToExplode_ = 0;
    /**
     * <code>optional int32 timeToExplode = 22;</code>
     * @return Whether the timeToExplode field is set.
     */
    @java.lang.Override
    public boolean hasTimeToExplode() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int32 timeToExplode = 22;</code>
     * @return The timeToExplode.
     */
    @java.lang.Override
    public int getTimeToExplode() {
      return timeToExplode_;
    }

    public static final int COMPONENTS_FIELD_NUMBER = 23;
    @SuppressWarnings("serial")
    private java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult> components_;
    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    @java.lang.Override
    public java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult> getComponentsList() {
      return components_;
    }
    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder> 
        getComponentsOrBuilderList() {
      return components_;
    }
    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    @java.lang.Override
    public int getComponentsCount() {
      return components_.size();
    }
    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    @java.lang.Override
    public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult getComponents(int index) {
      return components_.get(index);
    }
    /**
     * <code>repeated .ComponentResult components = 23;</code>
     */
    @java.lang.Override
    public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder getComponentsOrBuilder(
        int index) {
      return components_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (start_ != 0L) {
        output.writeInt64(1, start_);
      }
      if (end_ != 0L) {
        output.writeInt64(2, end_);
      }
      if (totalEU_ != 0L) {
        output.writeInt64(3, totalEU_);
      }
      if (minEUpT_ != 0) {
        output.writeInt32(4, minEUpT_);
      }
      if (maxEUpT_ != 0) {
        output.writeInt32(5, maxEUpT_);
      }
      if (totalHU_ != 0L) {
        output.writeInt64(6, totalHU_);
      }
      if (minHUpS_ != 0) {
        output.writeInt32(7, minHUpS_);
      }
      if (maxHUpS_ != 0) {
        output.writeInt32(8, maxHUpS_);
      }
      if (totalTempSecs_ != 0L) {
        output.writeInt64(9, totalTempSecs_);
      }
      if (minTemp_ != 0) {
        output.writeInt32(10, minTemp_);
      }
      if (maxTemp_ != 0) {
        output.writeInt32(11, maxTemp_);
      }
      if (totalHullHeating_ != 0L) {
        output.writeInt64(12, totalHullHeating_);
      }
      if (totalHullCooling_ != 0L) {
        output.writeInt64(13, totalHullCooling_);
      }
      if (simTime_ != 0) {
        output.writeInt32(14, simTime_);
      }
      if (activeTime_ != 0) {
        output.writeInt32(15, activeTime_);
      }
      if (pausedTime_ != 0) {
        output.writeInt32(16, pausedTime_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(17, timeToNormal_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(18, timeToBurn_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(19, timeToEvaporate_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(20, timeToHurt_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(21, timeToLava_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(22, timeToExplode_);
      }
      for (int i = 0; i < components_.size(); i++) {
        output.writeMessage(23, components_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (start_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, start_);
      }
      if (end_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, end_);
      }
      if (totalEU_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, totalEU_);
      }
      if (minEUpT_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, minEUpT_);
      }
      if (maxEUpT_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxEUpT_);
      }
      if (totalHU_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, totalHU_);
      }
      if (minHUpS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, minHUpS_);
      }
      if (maxHUpS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, maxHUpS_);
      }
      if (totalTempSecs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, totalTempSecs_);
      }
      if (minTemp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, minTemp_);
      }
      if (maxTemp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, maxTemp_);
      }
      if (totalHullHeating_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, totalHullHeating_);
      }
      if (totalHullCooling_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, totalHullCooling_);
      }
      if (simTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, simTime_);
      }
      if (activeTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, activeTime_);
      }
      if (pausedTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, pausedTime_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, timeToNormal_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, timeToBurn_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, timeToEvaporate_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, timeToHurt_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, timeToLava_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, timeToExplode_);
      }
      for (int i = 0; i < components_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, components_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult)) {
        return super.equals(obj);
      }
      com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult other = (com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult) obj;

      if (getStart()
          != other.getStart()) return false;
      if (getEnd()
          != other.getEnd()) return false;
      if (getTotalEU()
          != other.getTotalEU()) return false;
      if (getMinEUpT()
          != other.getMinEUpT()) return false;
      if (getMaxEUpT()
          != other.getMaxEUpT()) return false;
      if (getTotalHU()
          != other.getTotalHU()) return false;
      if (getMinHUpS()
          != other.getMinHUpS()) return false;
      if (getMaxHUpS()
          != other.getMaxHUpS()) return false;
      if (getTotalTempSecs()
          != other.getTotalTempSecs()) return false;
      if (getMinTemp()
          != other.getMinTemp()) return false;
      if (getMaxTemp()
          != other.getMaxTemp()) return false;
      if (getTotalHullHeating()
          != other.getTotalHullHeating()) return false;
      if (getTotalHullCooling()
          != other.getTotalHullCooling()) return false;
      if (getSimTime()
          != other.getSimTime()) return false;
      if (getActiveTime()
          != other.getActiveTime()) return false;
      if (getPausedTime()
          != other.getPausedTime()) return false;
      if (hasTimeToNormal() != other.hasTimeToNormal()) return false;
      if (hasTimeToNormal()) {
        if (getTimeToNormal()
            != other.getTimeToNormal()) return false;
      }
      if (hasTimeToBurn() != other.hasTimeToBurn()) return false;
      if (hasTimeToBurn()) {
        if (getTimeToBurn()
            != other.getTimeToBurn()) return false;
      }
      if (hasTimeToEvaporate() != other.hasTimeToEvaporate()) return false;
      if (hasTimeToEvaporate()) {
        if (getTimeToEvaporate()
            != other.getTimeToEvaporate()) return false;
      }
      if (hasTimeToHurt() != other.hasTimeToHurt()) return false;
      if (hasTimeToHurt()) {
        if (getTimeToHurt()
            != other.getTimeToHurt()) return false;
      }
      if (hasTimeToLava() != other.hasTimeToLava()) return false;
      if (hasTimeToLava()) {
        if (getTimeToLava()
            != other.getTimeToLava()) return false;
      }
      if (hasTimeToExplode() != other.hasTimeToExplode()) return false;
      if (hasTimeToExplode()) {
        if (getTimeToExplode()
            != other.getTimeToExplode()) return false;
      }
      if (!getComponentsList()
          .equals(other.getComponentsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + START_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStart());
      hash = (37 * hash) + END_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEnd());
      hash = (37 * hash) + TOTALEU_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalEU());
      hash = (37 * hash) + MINEUPT_FIELD_NUMBER;
      hash = (53 * hash) + getMinEUpT();
      hash = (37 * hash) + MAXEUPT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxEUpT();
      hash = (37 * hash) + TOTALHU_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalHU());
      hash = (37 * hash) + MINHUPS_FIELD_NUMBER;
      hash = (53 * hash) + getMinHUpS();
      hash = (37 * hash) + MAXHUPS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxHUpS();
      hash = (37 * hash) + TOTALTEMPSECS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalTempSecs());
      hash = (37 * hash) + MINTEMP_FIELD_NUMBER;
      hash = (53 * hash) + getMinTemp();
      hash = (37 * hash) + MAXTEMP_FIELD_NUMBER;
      hash = (53 * hash) + getMaxTemp();
      hash = (37 * hash) + TOTALHULLHEATING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalHullHeating());
      hash = (37 * hash) + TOTALHULLCOOLING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalHullCooling());
      hash = (37 * hash) + SIMTIME_FIELD_NUMBER;
      hash = (53 * hash) + getSimTime();
      hash = (37 * hash) + ACTIVETIME_FIELD_NUMBER;
      hash = (53 * hash) + getActiveTime();
      hash = (37 * hash) + PAUSEDTIME_FIELD_NUMBER;
      hash = (53 * hash) + getPausedTime();
      if (hasTimeToNormal()) {
        hash = (37 * hash) + TIMETONORMAL_FIELD_NUMBER;
        hash = (53 * hash) + getTimeToNormal();
      }
      if (hasTimeToBurn()) {
        hash = (37 * hash) + TIMETOBURN_FIELD_NUMBER;
        hash = (53 * hash) + getTimeToBurn();
      }
      if (hasTimeToEvaporate()) {
        hash = (37 * hash) + TIMETOEVAPORATE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeToEvaporate();
      }
      if (hasTimeToHurt()) {
        hash = (37 * hash) + TIMETOHURT_FIELD_NUMBER;
        hash = (53 * hash) + getTimeToHurt();
      }
      if (hasTimeToLava()) {
        hash = (37 * hash) + TIMETOLAVA_FIELD_NUMBER;
        hash = (53 * hash) + getTimeToLava();
      }
      if (hasTimeToExplode()) {
        hash = (37 * hash) + TIMETOEXPLODE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeToExplode();
      }
      if (getComponentsCount() > 0) {
        hash = (37 * hash) + COMPONENTS_FIELD_NUMBER;
        hash = (53 * hash) + getComponentsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SimulationResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SimulationResult)
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult.Builder.class);
      }

      // Construct using com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        start_ = 0L;
        end_ = 0L;
        totalEU_ = 0L;
        minEUpT_ = 0;
        maxEUpT_ = 0;
        totalHU_ = 0L;
        minHUpS_ = 0;
        maxHUpS_ = 0;
        totalTempSecs_ = 0L;
        minTemp_ = 0;
        maxTemp_ = 0;
        totalHullHeating_ = 0L;
        totalHullCooling_ = 0L;
        simTime_ = 0;
        activeTime_ = 0;
        pausedTime_ = 0;
        timeToNormal_ = 0;
        timeToBurn_ = 0;
        timeToEvaporate_ = 0;
        timeToHurt_ = 0;
        timeToLava_ = 0;
        timeToExplode_ = 0;
        if (componentsBuilder_ == null) {
          components_ = java.util.Collections.emptyList();
        } else {
          components_ = null;
          componentsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_SimulationResult_descriptor;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult getDefaultInstanceForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult.getDefaultInstance();
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult build() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult buildPartial() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult result = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult result) {
        if (componentsBuilder_ == null) {
          if (((bitField0_ & 0x00400000) != 0)) {
            components_ = java.util.Collections.unmodifiableList(components_);
            bitField0_ = (bitField0_ & ~0x00400000);
          }
          result.components_ = components_;
        } else {
          result.components_ = componentsBuilder_.build();
        }
      }

      private void buildPartial0(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.start_ = start_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.end_ = end_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.totalEU_ = totalEU_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.minEUpT_ = minEUpT_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.maxEUpT_ = maxEUpT_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.totalHU_ = totalHU_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.minHUpS_ = minHUpS_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.maxHUpS_ = maxHUpS_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.totalTempSecs_ = totalTempSecs_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.minTemp_ = minTemp_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.maxTemp_ = maxTemp_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.totalHullHeating_ = totalHullHeating_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.totalHullCooling_ = totalHullCooling_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.simTime_ = simTime_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.activeTime_ = activeTime_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.pausedTime_ = pausedTime_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.timeToNormal_ = timeToNormal_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.timeToBurn_ = timeToBurn_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.timeToEvaporate_ = timeToEvaporate_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.timeToHurt_ = timeToHurt_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.timeToLava_ = timeToLava_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.timeToExplode_ = timeToExplode_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult) {
          return mergeFrom((com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult other) {
        if (other == com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult.getDefaultInstance()) return this;
        if (other.getStart() != 0L) {
          setStart(other.getStart());
        }
        if (other.getEnd() != 0L) {
          setEnd(other.getEnd());
        }
        if (other.getTotalEU() != 0L) {
          setTotalEU(other.getTotalEU());
        }
        if (other.getMinEUpT() != 0) {
          setMinEUpT(other.getMinEUpT());
        }
        if (other.getMaxEUpT() != 0) {
          setMaxEUpT(other.getMaxEUpT());
        }
        if (other.getTotalHU() != 0L) {
          setTotalHU(other.getTotalHU());
        }
        if (other.getMinHUpS() != 0) {
          setMinHUpS(other.getMinHUpS());
        }
        if (other.getMaxHUpS() != 0) {
          setMaxHUpS(other.getMaxHUpS());
        }
        if (other.getTotalTempSecs() != 0L) {
          setTotalTempSecs(other.getTotalTempSecs());
        }
        if (other.getMinTemp() != 0) {
          setMinTemp(other.getMinTemp());
        }
        if (other.getMaxTemp() != 0) {
          setMaxTemp(other.getMaxTemp());
        }
        if (other.getTotalHullHeating() != 0L) {
          setTotalHullHeating(other.getTotalHullHeating());
        }
        if (other.getTotalHullCooling() != 0L) {
          setTotalHullCooling(other.getTotalHullCooling());
        }
        if (other.getSimTime() != 0) {
          setSimTime(other.getSimTime());
        }
        if (other.getActiveTime() != 0) {
          setActiveTime(other.getActiveTime());
        }
        if (other.getPausedTime() != 0) {
          setPausedTime(other.getPausedTime());
        }
        if (other.hasTimeToNormal()) {
          setTimeToNormal(other.getTimeToNormal());
        }
        if (other.hasTimeToBurn()) {
          setTimeToBurn(other.getTimeToBurn());
        }
        if (other.hasTimeToEvaporate()) {
          setTimeToEvaporate(other.getTimeToEvaporate());
        }
        if (other.hasTimeToHurt()) {
          setTimeToHurt(other.getTimeToHurt());
        }
        if (other.hasTimeToLava()) {
          setTimeToLava(other.getTimeToLava());
        }
        if (other.hasTimeToExplode()) {
          setTimeToExplode(other.getTimeToExplode());
        }
        if (componentsBuilder_ == null) {
          if (!other.components_.isEmpty()) {
            if (components_.isEmpty()) {
              components_ = other.components_;
              bitField0_ = (bitField0_ & ~0x00400000);
            } else {
              ensureComponentsIsMutable();
              components_.addAll(other.components_);
            }
            onChanged();
          }
        } else {
          if (!other.components_.isEmpty()) {
            if (componentsBuilder_.isEmpty()) {
              componentsBuilder_.dispose();
              componentsBuilder_ = null;
              components_ = other.components_;
              bitField0_ = (bitField0_ & ~0x00400000);
              componentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getComponentsFieldBuilder() : null;
            } else {
              componentsBuilder_.addAllMessages(other.components_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                start_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                end_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                totalEU_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                minEUpT_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                maxEUpT_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                totalHU_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                minHUpS_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                maxHUpS_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                totalTempSecs_ = input.readInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                minTemp_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                maxTemp_ = input.readInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                totalHullHeating_ = input.readInt64();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                totalHullCooling_ = input.readInt64();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                simTime_ = input.readInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                activeTime_ = input.readInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                pausedTime_ = input.readInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                timeToNormal_ = input.readInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 144: {
                timeToBurn_ = input.readInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 152: {
                timeToEvaporate_ = input.readInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                timeToHurt_ = input.readInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 168: {
                timeToLava_ = input.readInt32();
                bitField0_ |= 0x00100000;
                break;
              } // case 168
              case 176: {
                timeToExplode_ = input.readInt32();
                bitField0_ |= 0x00200000;
                break;
              } // case 176
              case 186: {
                com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult m =
                    input.readMessage(
                        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.parser(),
                        extensionRegistry);
                if (componentsBuilder_ == null) {
                  ensureComponentsIsMutable();
                  components_.add(m);
                } else {
                  componentsBuilder_.addMessage(m);
                }
                break;
              } // case 186
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long start_ ;
      /**
       * <code>int64 start = 1;</code>
       * @return The start.
       */
      @java.lang.Override
      public long getStart() {
        return start_;
      }
      /**
       * <code>int64 start = 1;</code>
       * @param value The start to set.
       * @return This builder for chaining.
       */
      public Builder setStart(long value) {

        start_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 start = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStart() {
        bitField0_ = (bitField0_ & ~0x00000001);
        start_ = 0L;
        onChanged();
        return this;
      }

      private long end_ ;
      /**
       * <code>int64 end = 2;</code>
       * @return The end.
       */
      @java.lang.Override
      public long getEnd() {
        return end_;
      }
      /**
       * <code>int64 end = 2;</code>
       * @param value The end to set.
       * @return This builder for chaining.
       */
      public Builder setEnd(long value) {

        end_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int64 end = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        end_ = 0L;
        onChanged();
        return this;
      }

      private long totalEU_ ;
      /**
       * <code>int64 totalEU = 3;</code>
       * @return The totalEU.
       */
      @java.lang.Override
      public long getTotalEU() {
        return totalEU_;
      }
      /**
       * <code>int64 totalEU = 3;</code>
       * @param value The totalEU to set.
       * @return This builder for chaining.
       */
      public Builder setTotalEU(long value) {

        totalEU_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalEU = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalEU() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalEU_ = 0L;
        onChanged();
        return this;
      }

      private int minEUpT_ ;
      /**
       * <code>int32 minEUpT = 4;</code>
       * @return The minEUpT.
       */
      @java.lang.Override
      public int getMinEUpT() {
        return minEUpT_;
      }
      /**
       * <code>int32 minEUpT = 4;</code>
       * @param value The minEUpT to set.
       * @return This builder for chaining.
       */
      public Builder setMinEUpT(int value) {

        minEUpT_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 minEUpT = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinEUpT() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minEUpT_ = 0;
        onChanged();
        return this;
      }

      private int maxEUpT_ ;
      /**
       * <code>int32 maxEUpT = 5;</code>
       * @return The maxEUpT.
       */
      @java.lang.Override
      public int getMaxEUpT() {
        return maxEUpT_;
      }
      /**
       * <code>int32 maxEUpT = 5;</code>
       * @param value The maxEUpT to set.
       * @return This builder for chaining.
       */
      public Builder setMaxEUpT(int value) {

        maxEUpT_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxEUpT = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxEUpT() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxEUpT_ = 0;
        onChanged();
        return this;
      }

      private long totalHU_ ;
      /**
       * <code>int64 totalHU = 6;</code>
       * @return The totalHU.
       */
      @java.lang.Override
      public long getTotalHU() {
        return totalHU_;
      }
      /**
       * <code>int64 totalHU = 6;</code>
       * @param value The totalHU to set.
       * @return This builder for chaining.
       */
      public Builder setTotalHU(long value) {

        totalHU_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalHU = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalHU() {
        bitField0_ = (bitField0_ & ~0x00000020);
        totalHU_ = 0L;
        onChanged();
        return this;
      }

      private int minHUpS_ ;
      /**
       * <code>int32 minHUpS = 7;</code>
       * @return The minHUpS.
       */
      @java.lang.Override
      public int getMinHUpS() {
        return minHUpS_;
      }
      /**
       * <code>int32 minHUpS = 7;</code>
       * @param value The minHUpS to set.
       * @return This builder for chaining.
       */
      public Builder setMinHUpS(int value) {

        minHUpS_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 minHUpS = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinHUpS() {
        bitField0_ = (bitField0_ & ~0x00000040);
        minHUpS_ = 0;
        onChanged();
        return this;
      }

      private int maxHUpS_ ;
      /**
       * <code>int32 maxHUpS = 8;</code>
       * @return The maxHUpS.
       */
      @java.lang.Override
      public int getMaxHUpS() {
        return maxHUpS_;
      }
      /**
       * <code>int32 maxHUpS = 8;</code>
       * @param value The maxHUpS to set.
       * @return This builder for chaining.
       */
      public Builder setMaxHUpS(int value) {

        maxHUpS_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxHUpS = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxHUpS() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxHUpS_ = 0;
        onChanged();
        return this;
      }

      private long totalTempSecs_ ;
      /**
       * <code>int64 totalTempSecs = 9;</code>
       * @return The totalTempSecs.
       */
      @java.lang.Override
      public long getTotalTempSecs() {
        return totalTempSecs_;
      }
      /**
       * <code>int64 totalTempSecs = 9;</code>
       * @param value The totalTempSecs to set.
       * @return This builder for chaining.
       */
      public Builder setTotalTempSecs(long value) {

        totalTempSecs_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalTempSecs = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalTempSecs() {
        bitField0_ = (bitField0_ & ~0x00000100);
        totalTempSecs_ = 0L;
        onChanged();
        return this;
      }

      private int minTemp_ ;
      /**
       * <code>int32 minTemp = 10;</code>
       * @return The minTemp.
       */
      @java.lang.Override
      public int getMinTemp() {
        return minTemp_;
      }
      /**
       * <code>int32 minTemp = 10;</code>
       * @param value The minTemp to set.
       * @return This builder for chaining.
       */
      public Builder setMinTemp(int value) {

        minTemp_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>int32 minTemp = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinTemp() {
        bitField0_ = (bitField0_ & ~0x00000200);
        minTemp_ = 0;
        onChanged();
        return this;
      }

      private int maxTemp_ ;
      /**
       * <code>int32 maxTemp = 11;</code>
       * @return The maxTemp.
       */
      @java.lang.Override
      public int getMaxTemp() {
        return maxTemp_;
      }
      /**
       * <code>int32 maxTemp = 11;</code>
       * @param value The maxTemp to set.
       * @return This builder for chaining.
       */
      public Builder setMaxTemp(int value) {

        maxTemp_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxTemp = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxTemp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        maxTemp_ = 0;
        onChanged();
        return this;
      }

      private long totalHullHeating_ ;
      /**
       * <code>int64 totalHullHeating = 12;</code>
       * @return The totalHullHeating.
       */
      @java.lang.Override
      public long getTotalHullHeating() {
        return totalHullHeating_;
      }
      /**
       * <code>int64 totalHullHeating = 12;</code>
       * @param value The totalHullHeating to set.
       * @return This builder for chaining.
       */
      public Builder setTotalHullHeating(long value) {

        totalHullHeating_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalHullHeating = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalHullHeating() {
        bitField0_ = (bitField0_ & ~0x00000800);
        totalHullHeating_ = 0L;
        onChanged();
        return this;
      }

      private long totalHullCooling_ ;
      /**
       * <code>int64 totalHullCooling = 13;</code>
       * @return The totalHullCooling.
       */
      @java.lang.Override
      public long getTotalHullCooling() {
        return totalHullCooling_;
      }
      /**
       * <code>int64 totalHullCooling = 13;</code>
       * @param value The totalHullCooling to set.
       * @return This builder for chaining.
       */
      public Builder setTotalHullCooling(long value) {

        totalHullCooling_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalHullCooling = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalHullCooling() {
        bitField0_ = (bitField0_ & ~0x00001000);
        totalHullCooling_ = 0L;
        onChanged();
        return this;
      }

      private int simTime_ ;
      /**
       * <code>int32 simTime = 14;</code>
       * @return The simTime.
       */
      @java.lang.Override
      public int getSimTime() {
        return simTime_;
      }
      /**
       * <code>int32 simTime = 14;</code>
       * @param value The simTime to set.
       * @return This builder for chaining.
       */
      public Builder setSimTime(int value) {

        simTime_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 simTime = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSimTime() {
        bitField0_ = (bitField0_ & ~0x00002000);
        simTime_ = 0;
        onChanged();
        return this;
      }

      private int activeTime_ ;
      /**
       * <code>int32 activeTime = 15;</code>
       * @return The activeTime.
       */
      @java.lang.Override
      public int getActiveTime() {
        return activeTime_;
      }
      /**
       * <code>int32 activeTime = 15;</code>
       * @param value The activeTime to set.
       * @return This builder for chaining.
       */
      public Builder setActiveTime(int value) {

        activeTime_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 activeTime = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearActiveTime() {
        bitField0_ = (bitField0_ & ~0x00004000);
        activeTime_ = 0;
        onChanged();
        return this;
      }

      private int pausedTime_ ;
      /**
       * <code>int32 pausedTime = 16;</code>
       * @return The pausedTime.
       */
      @java.lang.Override
      public int getPausedTime() {
        return pausedTime_;
      }
      /**
       * <code>int32 pausedTime = 16;</code>
       * @param value The pausedTime to set.
       * @return This builder for chaining.
       */
      public Builder setPausedTime(int value) {

        pausedTime_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 pausedTime = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearPausedTime() {
        bitField0_ = (bitField0_ & ~0x00008000);
        pausedTime_ = 0;
        onChanged();
        return this;
      }

      private int timeToNormal_ ;
      /**
       * <code>optional int32 timeToNormal = 17;</code>
       * @return Whether the timeToNormal field is set.
       */
      @java.lang.Override
      public boolean hasTimeToNormal() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional int32 timeToNormal = 17;</code>
       * @return The timeToNormal.
       */
      @java.lang.Override
      public int getTimeToNormal() {
        return timeToNormal_;
      }
      /**
       * <code>optional int32 timeToNormal = 17;</code>
       * @param value The timeToNormal to set.
       * @return This builder for chaining.
       */
      public Builder setTimeToNormal(int value) {

        timeToNormal_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeToNormal = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeToNormal() {
        bitField0_ = (bitField0_ & ~0x00010000);
        timeToNormal_ = 0;
        onChanged();
        return this;
      }

      private int timeToBurn_ ;
      /**
       * <code>optional int32 timeToBurn = 18;</code>
       * @return Whether the timeToBurn field is set.
       */
      @java.lang.Override
      public boolean hasTimeToBurn() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional int32 timeToBurn = 18;</code>
       * @return The timeToBurn.
       */
      @java.lang.Override
      public int getTimeToBurn() {
        return timeToBurn_;
      }
      /**
       * <code>optional int32 timeToBurn = 18;</code>
       * @param value The timeToBurn to set.
       * @return This builder for chaining.
       */
      public Builder setTimeToBurn(int value) {

        timeToBurn_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeToBurn = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeToBurn() {
        bitField0_ = (bitField0_ & ~0x00020000);
        timeToBurn_ = 0;
        onChanged();
        return this;
      }

      private int timeToEvaporate_ ;
      /**
       * <code>optional int32 timeToEvaporate = 19;</code>
       * @return Whether the timeToEvaporate field is set.
       */
      @java.lang.Override
      public boolean hasTimeToEvaporate() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>optional int32 timeToEvaporate = 19;</code>
       * @return The timeToEvaporate.
       */
      @java.lang.Override
      public int getTimeToEvaporate() {
        return timeToEvaporate_;
      }
      /**
       * <code>optional int32 timeToEvaporate = 19;</code>
       * @param value The timeToEvaporate to set.
       * @return This builder for chaining.
       */
      public Builder setTimeToEvaporate(int value) {

        timeToEvaporate_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeToEvaporate = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeToEvaporate() {
        bitField0_ = (bitField0_ & ~0x00040000);
        timeToEvaporate_ = 0;
        onChanged();
        return this;
      }

      private int timeToHurt_ ;
      /**
       * <code>optional int32 timeToHurt = 20;</code>
       * @return Whether the timeToHurt field is set.
       */
      @java.lang.Override
      public boolean hasTimeToHurt() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>optional int32 timeToHurt = 20;</code>
       * @return The timeToHurt.
       */
      @java.lang.Override
      public int getTimeToHurt() {
        return timeToHurt_;
      }
      /**
       * <code>optional int32 timeToHurt = 20;</code>
       * @param value The timeToHurt to set.
       * @return This builder for chaining.
       */
      public Builder setTimeToHurt(int value) {

        timeToHurt_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeToHurt = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeToHurt() {
        bitField0_ = (bitField0_ & ~0x00080000);
        timeToHurt_ = 0;
        onChanged();
        return this;
      }

      private int timeToLava_ ;
      /**
       * <code>optional int32 timeToLava = 21;</code>
       * @return Whether the timeToLava field is set.
       */
      @java.lang.Override
      public boolean hasTimeToLava() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <code>optional int32 timeToLava = 21;</code>
       * @return The timeToLava.
       */
      @java.lang.Override
      public int getTimeToLava() {
        return timeToLava_;
      }
      /**
       * <code>optional int32 timeToLava = 21;</code>
       * @param value The timeToLava to set.
       * @return This builder for chaining.
       */
      public Builder setTimeToLava(int value) {

        timeToLava_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeToLava = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeToLava() {
        bitField0_ = (bitField0_ & ~0x00100000);
        timeToLava_ = 0;
        onChanged();
        return this;
      }

      private int timeToExplode_ ;
      /**
       * <code>optional int32 timeToExplode = 22;</code>
       * @return Whether the timeToExplode field is set.
       */
      @java.lang.Override
      public boolean hasTimeToExplode() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <code>optional int32 timeToExplode = 22;</code>
       * @return The timeToExplode.
       */
      @java.lang.Override
      public int getTimeToExplode() {
        return timeToExplode_;
      }
      /**
       * <code>optional int32 timeToExplode = 22;</code>
       * @param value The timeToExplode to set.
       * @return This builder for chaining.
       */
      public Builder setTimeToExplode(int value) {

        timeToExplode_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeToExplode = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeToExplode() {
        bitField0_ = (bitField0_ & ~0x00200000);
        timeToExplode_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult> components_ =
        java.util.Collections.emptyList();
      private void ensureComponentsIsMutable() {
        if (!((bitField0_ & 0x00400000) != 0)) {
          components_ = new java.util.ArrayList<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult>(components_);
          bitField0_ |= 0x00400000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder> componentsBuilder_;

      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult> getComponentsList() {
        if (componentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(components_);
        } else {
          return componentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public int getComponentsCount() {
        if (componentsBuilder_ == null) {
          return components_.size();
        } else {
          return componentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult getComponents(int index) {
        if (componentsBuilder_ == null) {
          return components_.get(index);
        } else {
          return componentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public Builder setComponents(
          int index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentsIsMutable();
          components_.set(index, value);
          onChanged();
        } else {
          componentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public Builder setComponents(
          int index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.set(index, builderForValue.build());
          onChanged();
        } else {
          componentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public Builder addComponents(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentsIsMutable();
          components_.add(value);
          onChanged();
        } else {
          componentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public Builder addComponents(
          int index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentsIsMutable();
          components_.add(index, value);
          onChanged();
        } else {
          componentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public Builder addComponents(
          com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.add(builderForValue.build());
          onChanged();
        } else {
          componentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public Builder addComponents(
          int index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.add(index, builderForValue.build());
          onChanged();
        } else {
          componentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public Builder addAllComponents(
          java.lang.Iterable<? extends com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult> values) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, components_);
          onChanged();
        } else {
          componentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public Builder clearComponents() {
        if (componentsBuilder_ == null) {
          components_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00400000);
          onChanged();
        } else {
          componentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public Builder removeComponents(int index) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.remove(index);
          onChanged();
        } else {
          componentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder getComponentsBuilder(
          int index) {
        return getComponentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder getComponentsOrBuilder(
          int index) {
        if (componentsBuilder_ == null) {
          return components_.get(index);  } else {
          return componentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public java.util.List<? extends com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder> 
           getComponentsOrBuilderList() {
        if (componentsBuilder_ != null) {
          return componentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(components_);
        }
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder addComponentsBuilder() {
        return getComponentsFieldBuilder().addBuilder(
            com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.getDefaultInstance());
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder addComponentsBuilder(
          int index) {
        return getComponentsFieldBuilder().addBuilder(
            index, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.getDefaultInstance());
      }
      /**
       * <code>repeated .ComponentResult components = 23;</code>
       */
      public java.util.List<com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder> 
           getComponentsBuilderList() {
        return getComponentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder> 
          getComponentsFieldBuilder() {
        if (componentsBuilder_ == null) {
          componentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder>(
                  components_,
                  ((bitField0_ & 0x00400000) != 0),
                  getParentForChildren(),
                  isClean());
          components_ = null;
        }
        return componentsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SimulationResult)
    }

    // @@protoc_insertion_point(class_scope:SimulationResult)
    private static final com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult();
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimulationResult>
        PARSER = new com.google.protobuf.AbstractParser<SimulationResult>() {
      @java.lang.Override
      public SimulationResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SimulationResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimulationResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.SimulationResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ComponentResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ComponentResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 index = 1;</code>
     * @return The index.
     */
    int getIndex();

    /**
     * <code>int64 totalAirHeating = 2;</code>
     * @return The totalAirHeating.
     */
    long getTotalAirHeating();

    /**
     * <code>int64 totalHullHeating = 3;</code>
     * @return The totalHullHeating.
     */
    long getTotalHullHeating();

    /**
     * <code>int64 totalHullCooling = 4;</code>
     * @return The totalHullCooling.
     */
    long getTotalHullCooling();

    /**
     * <code>int64 totalTempSecs = 5;</code>
     * @return The totalTempSecs.
     */
    long getTotalTempSecs();

    /**
     * <code>int32 minTemp = 6;</code>
     * @return The minTemp.
     */
    int getMinTemp();

    /**
     * <code>int32 maxTemp = 7;</code>
     * @return The maxTemp.
     */
    int getMaxTemp();

    /**
     * <code>int32 replaceCount = 8;</code>
     * @return The replaceCount.
     */
    int getReplaceCount();

    /**
     * <code>int64 totalEUOutput = 9;</code>
     * @return The totalEUOutput.
     */
    long getTotalEUOutput();
  }
  /**
   * Protobuf type {@code ComponentResult}
   */
  public static final class ComponentResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ComponentResult)
      ComponentResultOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 1,
        /* suffix= */ "",
        ComponentResult.class.getName());
    }
    // Use ComponentResult.newBuilder() to construct.
    private ComponentResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ComponentResult() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_ = 0;
    /**
     * <code>int32 index = 1;</code>
     * @return The index.
     */
    @java.lang.Override
    public int getIndex() {
      return index_;
    }

    public static final int TOTALAIRHEATING_FIELD_NUMBER = 2;
    private long totalAirHeating_ = 0L;
    /**
     * <code>int64 totalAirHeating = 2;</code>
     * @return The totalAirHeating.
     */
    @java.lang.Override
    public long getTotalAirHeating() {
      return totalAirHeating_;
    }

    public static final int TOTALHULLHEATING_FIELD_NUMBER = 3;
    private long totalHullHeating_ = 0L;
    /**
     * <code>int64 totalHullHeating = 3;</code>
     * @return The totalHullHeating.
     */
    @java.lang.Override
    public long getTotalHullHeating() {
      return totalHullHeating_;
    }

    public static final int TOTALHULLCOOLING_FIELD_NUMBER = 4;
    private long totalHullCooling_ = 0L;
    /**
     * <code>int64 totalHullCooling = 4;</code>
     * @return The totalHullCooling.
     */
    @java.lang.Override
    public long getTotalHullCooling() {
      return totalHullCooling_;
    }

    public static final int TOTALTEMPSECS_FIELD_NUMBER = 5;
    private long totalTempSecs_ = 0L;
    /**
     * <code>int64 totalTempSecs = 5;</code>
     * @return The totalTempSecs.
     */
    @java.lang.Override
    public long getTotalTempSecs() {
      return totalTempSecs_;
    }

    public static final int MINTEMP_FIELD_NUMBER = 6;
    private int minTemp_ = 0;
    /**
     * <code>int32 minTemp = 6;</code>
     * @return The minTemp.
     */
    @java.lang.Override
    public int getMinTemp() {
      return minTemp_;
    }

    public static final int MAXTEMP_FIELD_NUMBER = 7;
    private int maxTemp_ = 0;
    /**
     * <code>int32 maxTemp = 7;</code>
     * @return The maxTemp.
     */
    @java.lang.Override
    public int getMaxTemp() {
      return maxTemp_;
    }

    public static final int REPLACECOUNT_FIELD_NUMBER = 8;
    private int replaceCount_ = 0;
    /**
     * <code>int32 replaceCount = 8;</code>
     * @return The replaceCount.
     */
    @java.lang.Override
    public int getReplaceCount() {
      return replaceCount_;
    }

    public static final int TOTALEUOUTPUT_FIELD_NUMBER = 9;
    private long totalEUOutput_ = 0L;
    /**
     * <code>int64 totalEUOutput = 9;</code>
     * @return The totalEUOutput.
     */
    @java.lang.Override
    public long getTotalEUOutput() {
      return totalEUOutput_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0) {
        output.writeInt32(1, index_);
      }
      if (totalAirHeating_ != 0L) {
        output.writeInt64(2, totalAirHeating_);
      }
      if (totalHullHeating_ != 0L) {
        output.writeInt64(3, totalHullHeating_);
      }
      if (totalHullCooling_ != 0L) {
        output.writeInt64(4, totalHullCooling_);
      }
      if (totalTempSecs_ != 0L) {
        output.writeInt64(5, totalTempSecs_);
      }
      if (minTemp_ != 0) {
        output.writeInt32(6, minTemp_);
      }
      if (maxTemp_ != 0) {
        output.writeInt32(7, maxTemp_);
      }
      if (replaceCount_ != 0) {
        output.writeInt32(8, replaceCount_);
      }
      if (totalEUOutput_ != 0L) {
        output.writeInt64(9, totalEUOutput_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (totalAirHeating_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, totalAirHeating_);
      }
      if (totalHullHeating_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, totalHullHeating_);
      }
      if (totalHullCooling_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, totalHullCooling_);
      }
      if (totalTempSecs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, totalTempSecs_);
      }
      if (minTemp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, minTemp_);
      }
      if (maxTemp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxTemp_);
      }
      if (replaceCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, replaceCount_);
      }
      if (totalEUOutput_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, totalEUOutput_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult)) {
        return super.equals(obj);
      }
      com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult other = (com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult) obj;

      if (getIndex()
          != other.getIndex()) return false;
      if (getTotalAirHeating()
          != other.getTotalAirHeating()) return false;
      if (getTotalHullHeating()
          != other.getTotalHullHeating()) return false;
      if (getTotalHullCooling()
          != other.getTotalHullCooling()) return false;
      if (getTotalTempSecs()
          != other.getTotalTempSecs()) return false;
      if (getMinTemp()
          != other.getMinTemp()) return false;
      if (getMaxTemp()
          != other.getMaxTemp()) return false;
      if (getReplaceCount()
          != other.getReplaceCount()) return false;
      if (getTotalEUOutput()
          != other.getTotalEUOutput()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + TOTALAIRHEATING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalAirHeating());
      hash = (37 * hash) + TOTALHULLHEATING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalHullHeating());
      hash = (37 * hash) + TOTALHULLCOOLING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalHullCooling());
      hash = (37 * hash) + TOTALTEMPSECS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalTempSecs());
      hash = (37 * hash) + MINTEMP_FIELD_NUMBER;
      hash = (53 * hash) + getMinTemp();
      hash = (37 * hash) + MAXTEMP_FIELD_NUMBER;
      hash = (53 * hash) + getMaxTemp();
      hash = (37 * hash) + REPLACECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getReplaceCount();
      hash = (37 * hash) + TOTALEUOUTPUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalEUOutput());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ComponentResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ComponentResult)
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.Builder.class);
      }

      // Construct using com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        index_ = 0;
        totalAirHeating_ = 0L;
        totalHullHeating_ = 0L;
        totalHullCooling_ = 0L;
        totalTempSecs_ = 0L;
        minTemp_ = 0;
        maxTemp_ = 0;
        replaceCount_ = 0;
        totalEUOutput_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_ComponentResult_descriptor;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult getDefaultInstanceForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.getDefaultInstance();
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult build() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult buildPartial() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult result = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.index_ = index_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.totalAirHeating_ = totalAirHeating_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.totalHullHeating_ = totalHullHeating_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.totalHullCooling_ = totalHullCooling_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.totalTempSecs_ = totalTempSecs_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.minTemp_ = minTemp_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.maxTemp_ = maxTemp_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.replaceCount_ = replaceCount_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.totalEUOutput_ = totalEUOutput_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult) {
          return mergeFrom((com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult other) {
        if (other == com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult.getDefaultInstance()) return this;
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getTotalAirHeating() != 0L) {
          setTotalAirHeating(other.getTotalAirHeating());
        }
        if (other.getTotalHullHeating() != 0L) {
          setTotalHullHeating(other.getTotalHullHeating());
        }
        if (other.getTotalHullCooling() != 0L) {
          setTotalHullCooling(other.getTotalHullCooling());
        }
        if (other.getTotalTempSecs() != 0L) {
          setTotalTempSecs(other.getTotalTempSecs());
        }
        if (other.getMinTemp() != 0) {
          setMinTemp(other.getMinTemp());
        }
        if (other.getMaxTemp() != 0) {
          setMaxTemp(other.getMaxTemp());
        }
        if (other.getReplaceCount() != 0) {
          setReplaceCount(other.getReplaceCount());
        }
        if (other.getTotalEUOutput() != 0L) {
          setTotalEUOutput(other.getTotalEUOutput());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                index_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                totalAirHeating_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                totalHullHeating_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                totalHullCooling_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                totalTempSecs_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                minTemp_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                maxTemp_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                replaceCount_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                totalEUOutput_ = input.readInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int index_ ;
      /**
       * <code>int32 index = 1;</code>
       * @return The index.
       */
      @java.lang.Override
      public int getIndex() {
        return index_;
      }
      /**
       * <code>int32 index = 1;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {

        index_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 index = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }

      private long totalAirHeating_ ;
      /**
       * <code>int64 totalAirHeating = 2;</code>
       * @return The totalAirHeating.
       */
      @java.lang.Override
      public long getTotalAirHeating() {
        return totalAirHeating_;
      }
      /**
       * <code>int64 totalAirHeating = 2;</code>
       * @param value The totalAirHeating to set.
       * @return This builder for chaining.
       */
      public Builder setTotalAirHeating(long value) {

        totalAirHeating_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalAirHeating = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalAirHeating() {
        bitField0_ = (bitField0_ & ~0x00000002);
        totalAirHeating_ = 0L;
        onChanged();
        return this;
      }

      private long totalHullHeating_ ;
      /**
       * <code>int64 totalHullHeating = 3;</code>
       * @return The totalHullHeating.
       */
      @java.lang.Override
      public long getTotalHullHeating() {
        return totalHullHeating_;
      }
      /**
       * <code>int64 totalHullHeating = 3;</code>
       * @param value The totalHullHeating to set.
       * @return This builder for chaining.
       */
      public Builder setTotalHullHeating(long value) {

        totalHullHeating_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalHullHeating = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalHullHeating() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalHullHeating_ = 0L;
        onChanged();
        return this;
      }

      private long totalHullCooling_ ;
      /**
       * <code>int64 totalHullCooling = 4;</code>
       * @return The totalHullCooling.
       */
      @java.lang.Override
      public long getTotalHullCooling() {
        return totalHullCooling_;
      }
      /**
       * <code>int64 totalHullCooling = 4;</code>
       * @param value The totalHullCooling to set.
       * @return This builder for chaining.
       */
      public Builder setTotalHullCooling(long value) {

        totalHullCooling_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalHullCooling = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalHullCooling() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalHullCooling_ = 0L;
        onChanged();
        return this;
      }

      private long totalTempSecs_ ;
      /**
       * <code>int64 totalTempSecs = 5;</code>
       * @return The totalTempSecs.
       */
      @java.lang.Override
      public long getTotalTempSecs() {
        return totalTempSecs_;
      }
      /**
       * <code>int64 totalTempSecs = 5;</code>
       * @param value The totalTempSecs to set.
       * @return This builder for chaining.
       */
      public Builder setTotalTempSecs(long value) {

        totalTempSecs_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalTempSecs = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalTempSecs() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalTempSecs_ = 0L;
        onChanged();
        return this;
      }

      private int minTemp_ ;
      /**
       * <code>int32 minTemp = 6;</code>
       * @return The minTemp.
       */
      @java.lang.Override
      public int getMinTemp() {
        return minTemp_;
      }
      /**
       * <code>int32 minTemp = 6;</code>
       * @param value The minTemp to set.
       * @return This builder for chaining.
       */
      public Builder setMinTemp(int value) {

        minTemp_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 minTemp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinTemp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minTemp_ = 0;
        onChanged();
        return this;
      }

      private int maxTemp_ ;
      /**
       * <code>int32 maxTemp = 7;</code>
       * @return The maxTemp.
       */
      @java.lang.Override
      public int getMaxTemp() {
        return maxTemp_;
      }
      /**
       * <code>int32 maxTemp = 7;</code>
       * @param value The maxTemp to set.
       * @return This builder for chaining.
       */
      public Builder setMaxTemp(int value) {

        maxTemp_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxTemp = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxTemp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxTemp_ = 0;
        onChanged();
        return this;
      }

      private int replaceCount_ ;
      /**
       * <code>int32 replaceCount = 8;</code>
       * @return The replaceCount.
       */
      @java.lang.Override
      public int getReplaceCount() {
        return replaceCount_;
      }
      /**
       * <code>int32 replaceCount = 8;</code>
       * @param value The replaceCount to set.
       * @return This builder for chaining.
       */
      public Builder setReplaceCount(int value) {

        replaceCount_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>int32 replaceCount = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearReplaceCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        replaceCount_ = 0;
        onChanged();
        return this;
      }

      private long totalEUOutput_ ;
      /**
       * <code>int64 totalEUOutput = 9;</code>
       * @return The totalEUOutput.
       */
      @java.lang.Override
      public long getTotalEUOutput() {
        return totalEUOutput_;
      }
      /**
       * <code>int64 totalEUOutput = 9;</code>
       * @param value The totalEUOutput to set.
       * @return This builder for chaining.
       */
      public Builder setTotalEUOutput(long value) {

        totalEUOutput_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalEUOutput = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalEUOutput() {
        bitField0_ = (bitField0_ & ~0x00000100);
        totalEUOutput_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ComponentResult)
    }

    // @@protoc_insertion_point(class_scope:ComponentResult)
    private static final com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult();
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComponentResult>
        PARSER = new com.google.protobuf.AbstractParser<ComponentResult>() {
      @java.lang.Override
      public ComponentResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ComponentResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComponentResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.ComponentResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CustomResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CustomResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string i18n = 1;</code>
     * @return The i18n.
     */
    java.lang.String getI18N();
    /**
     * <code>string i18n = 1;</code>
     * @return The bytes for i18n.
     */
    com.google.protobuf.ByteString
        getI18NBytes();

    /**
     * <code>float float_value = 2;</code>
     * @return Whether the floatValue field is set.
     */
    boolean hasFloatValue();
    /**
     * <code>float float_value = 2;</code>
     * @return The floatValue.
     */
    float getFloatValue();

    /**
     * <code>int64 long_value = 3;</code>
     * @return Whether the longValue field is set.
     */
    boolean hasLongValue();
    /**
     * <code>int64 long_value = 3;</code>
     * @return The longValue.
     */
    long getLongValue();

    /**
     * <code>string string_value = 4;</code>
     * @return Whether the stringValue field is set.
     */
    boolean hasStringValue();
    /**
     * <code>string string_value = 4;</code>
     * @return The stringValue.
     */
    java.lang.String getStringValue();
    /**
     * <code>string string_value = 4;</code>
     * @return The bytes for stringValue.
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult.ValuesCase getValuesCase();
  }
  /**
   * Protobuf type {@code CustomResult}
   */
  public static final class CustomResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CustomResult)
      CustomResultOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 1,
        /* suffix= */ "",
        CustomResult.class.getName());
    }
    // Use CustomResult.newBuilder() to construct.
    private CustomResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CustomResult() {
      i18N_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_CustomResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_CustomResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult.Builder.class);
    }

    private int valuesCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object values_;
    public enum ValuesCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      FLOAT_VALUE(2),
      LONG_VALUE(3),
      STRING_VALUE(4),
      VALUES_NOT_SET(0);
      private final int value;
      private ValuesCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValuesCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValuesCase forNumber(int value) {
        switch (value) {
          case 2: return FLOAT_VALUE;
          case 3: return LONG_VALUE;
          case 4: return STRING_VALUE;
          case 0: return VALUES_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValuesCase
    getValuesCase() {
      return ValuesCase.forNumber(
          valuesCase_);
    }

    public static final int I18N_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object i18N_ = "";
    /**
     * <code>string i18n = 1;</code>
     * @return The i18n.
     */
    @java.lang.Override
    public java.lang.String getI18N() {
      java.lang.Object ref = i18N_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        i18N_ = s;
        return s;
      }
    }
    /**
     * <code>string i18n = 1;</code>
     * @return The bytes for i18n.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getI18NBytes() {
      java.lang.Object ref = i18N_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        i18N_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOAT_VALUE_FIELD_NUMBER = 2;
    /**
     * <code>float float_value = 2;</code>
     * @return Whether the floatValue field is set.
     */
    @java.lang.Override
    public boolean hasFloatValue() {
      return valuesCase_ == 2;
    }
    /**
     * <code>float float_value = 2;</code>
     * @return The floatValue.
     */
    @java.lang.Override
    public float getFloatValue() {
      if (valuesCase_ == 2) {
        return (java.lang.Float) values_;
      }
      return 0F;
    }

    public static final int LONG_VALUE_FIELD_NUMBER = 3;
    /**
     * <code>int64 long_value = 3;</code>
     * @return Whether the longValue field is set.
     */
    @java.lang.Override
    public boolean hasLongValue() {
      return valuesCase_ == 3;
    }
    /**
     * <code>int64 long_value = 3;</code>
     * @return The longValue.
     */
    @java.lang.Override
    public long getLongValue() {
      if (valuesCase_ == 3) {
        return (java.lang.Long) values_;
      }
      return 0L;
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 4;
    /**
     * <code>string string_value = 4;</code>
     * @return Whether the stringValue field is set.
     */
    public boolean hasStringValue() {
      return valuesCase_ == 4;
    }
    /**
     * <code>string string_value = 4;</code>
     * @return The stringValue.
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = "";
      if (valuesCase_ == 4) {
        ref = values_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valuesCase_ == 4) {
          values_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string string_value = 4;</code>
     * @return The bytes for stringValue.
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = "";
      if (valuesCase_ == 4) {
        ref = values_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valuesCase_ == 4) {
          values_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(i18N_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, i18N_);
      }
      if (valuesCase_ == 2) {
        output.writeFloat(
            2, (float)((java.lang.Float) values_));
      }
      if (valuesCase_ == 3) {
        output.writeInt64(
            3, (long)((java.lang.Long) values_));
      }
      if (valuesCase_ == 4) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, values_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(i18N_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, i18N_);
      }
      if (valuesCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(
              2, (float)((java.lang.Float) values_));
      }
      if (valuesCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              3, (long)((java.lang.Long) values_));
      }
      if (valuesCase_ == 4) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, values_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult)) {
        return super.equals(obj);
      }
      com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult other = (com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult) obj;

      if (!getI18N()
          .equals(other.getI18N())) return false;
      if (!getValuesCase().equals(other.getValuesCase())) return false;
      switch (valuesCase_) {
        case 2:
          if (java.lang.Float.floatToIntBits(getFloatValue())
              != java.lang.Float.floatToIntBits(
                  other.getFloatValue())) return false;
          break;
        case 3:
          if (getLongValue()
              != other.getLongValue()) return false;
          break;
        case 4:
          if (!getStringValue()
              .equals(other.getStringValue())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + I18N_FIELD_NUMBER;
      hash = (53 * hash) + getI18N().hashCode();
      switch (valuesCase_) {
        case 2:
          hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getFloatValue());
          break;
        case 3:
          hash = (37 * hash) + LONG_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLongValue());
          break;
        case 4:
          hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getStringValue().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CustomResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CustomResult)
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_CustomResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_CustomResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult.class, com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult.Builder.class);
      }

      // Construct using com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        i18N_ = "";
        valuesCase_ = 0;
        values_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.internal_static_CustomResult_descriptor;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult getDefaultInstanceForType() {
        return com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult.getDefaultInstance();
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult build() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult buildPartial() {
        com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult result = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.i18N_ = i18N_;
        }
      }

      private void buildPartialOneofs(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult result) {
        result.valuesCase_ = valuesCase_;
        result.values_ = this.values_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult) {
          return mergeFrom((com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult other) {
        if (other == com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult.getDefaultInstance()) return this;
        if (!other.getI18N().isEmpty()) {
          i18N_ = other.i18N_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        switch (other.getValuesCase()) {
          case FLOAT_VALUE: {
            setFloatValue(other.getFloatValue());
            break;
          }
          case LONG_VALUE: {
            setLongValue(other.getLongValue());
            break;
          }
          case STRING_VALUE: {
            valuesCase_ = 4;
            values_ = other.values_;
            onChanged();
            break;
          }
          case VALUES_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                i18N_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 21: {
                values_ = input.readFloat();
                valuesCase_ = 2;
                break;
              } // case 21
              case 24: {
                values_ = input.readInt64();
                valuesCase_ = 3;
                break;
              } // case 24
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();
                valuesCase_ = 4;
                values_ = s;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int valuesCase_ = 0;
      private java.lang.Object values_;
      public ValuesCase
          getValuesCase() {
        return ValuesCase.forNumber(
            valuesCase_);
      }

      public Builder clearValues() {
        valuesCase_ = 0;
        values_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object i18N_ = "";
      /**
       * <code>string i18n = 1;</code>
       * @return The i18n.
       */
      public java.lang.String getI18N() {
        java.lang.Object ref = i18N_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          i18N_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string i18n = 1;</code>
       * @return The bytes for i18n.
       */
      public com.google.protobuf.ByteString
          getI18NBytes() {
        java.lang.Object ref = i18N_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          i18N_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string i18n = 1;</code>
       * @param value The i18n to set.
       * @return This builder for chaining.
       */
      public Builder setI18N(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        i18N_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string i18n = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearI18N() {
        i18N_ = getDefaultInstance().getI18N();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string i18n = 1;</code>
       * @param value The bytes for i18n to set.
       * @return This builder for chaining.
       */
      public Builder setI18NBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        i18N_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       * <code>float float_value = 2;</code>
       * @return Whether the floatValue field is set.
       */
      public boolean hasFloatValue() {
        return valuesCase_ == 2;
      }
      /**
       * <code>float float_value = 2;</code>
       * @return The floatValue.
       */
      public float getFloatValue() {
        if (valuesCase_ == 2) {
          return (java.lang.Float) values_;
        }
        return 0F;
      }
      /**
       * <code>float float_value = 2;</code>
       * @param value The floatValue to set.
       * @return This builder for chaining.
       */
      public Builder setFloatValue(float value) {

        valuesCase_ = 2;
        values_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float float_value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatValue() {
        if (valuesCase_ == 2) {
          valuesCase_ = 0;
          values_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int64 long_value = 3;</code>
       * @return Whether the longValue field is set.
       */
      public boolean hasLongValue() {
        return valuesCase_ == 3;
      }
      /**
       * <code>int64 long_value = 3;</code>
       * @return The longValue.
       */
      public long getLongValue() {
        if (valuesCase_ == 3) {
          return (java.lang.Long) values_;
        }
        return 0L;
      }
      /**
       * <code>int64 long_value = 3;</code>
       * @param value The longValue to set.
       * @return This builder for chaining.
       */
      public Builder setLongValue(long value) {

        valuesCase_ = 3;
        values_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 long_value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongValue() {
        if (valuesCase_ == 3) {
          valuesCase_ = 0;
          values_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string string_value = 4;</code>
       * @return Whether the stringValue field is set.
       */
      @java.lang.Override
      public boolean hasStringValue() {
        return valuesCase_ == 4;
      }
      /**
       * <code>string string_value = 4;</code>
       * @return The stringValue.
       */
      @java.lang.Override
      public java.lang.String getStringValue() {
        java.lang.Object ref = "";
        if (valuesCase_ == 4) {
          ref = values_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valuesCase_ == 4) {
            values_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_value = 4;</code>
       * @return The bytes for stringValue.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = "";
        if (valuesCase_ == 4) {
          ref = values_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valuesCase_ == 4) {
            values_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_value = 4;</code>
       * @param value The stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        valuesCase_ = 4;
        values_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string string_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringValue() {
        if (valuesCase_ == 4) {
          valuesCase_ = 0;
          values_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string string_value = 4;</code>
       * @param value The bytes for stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        valuesCase_ = 4;
        values_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CustomResult)
    }

    // @@protoc_insertion_point(class_scope:CustomResult)
    private static final com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult();
    }

    public static com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CustomResult>
        PARSER = new com.google.protobuf.AbstractParser<CustomResult>() {
      @java.lang.Override
      public CustomResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CustomResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CustomResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.recursive_pineapple.nuclear_horizons.reactors.tile.simulator.SimulatorProtos.CustomResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SimulationConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SimulationConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ComponentConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ComponentConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SimulationResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SimulationResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ComponentResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ComponentResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CustomResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CustomResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\njsrc/main/java/com/recursive_pineapple/" +
      "nuclear_horizons/reactors/tile/simulator" +
      "/SimulationConfigProto.proto\"\347\001\n\020Simulat" +
      "ionConfig\022\016\n\006pulsed\030\001 \001(\010\022\021\n\tautomated\030\002" +
      " \001(\010\022\r\n\005fluid\030\003 \001(\010\022\023\n\013initialHeat\030\004 \001(\005" +
      "\022\017\n\007onPulse\030\005 \001(\005\022\020\n\010offPulse\030\006 \001(\005\022\023\n\013s" +
      "uspendTemp\030\007 \001(\005\022\022\n\nresumeTemp\030\010 \001(\005\022\032\n\022" +
      "maxSimulationTicks\030\t \001(\005\022$\n\ncomponents\030\n" +
      " \003(\0132\020.ComponentConfig\"\216\001\n\017ComponentConf" +
      "ig\022\r\n\005index\030\001 \001(\005\022\014\n\004item\030\002 \001(\005\022\025\n\rhasAu" +
      "tomation\030\003 \001(\010\022\023\n\013initialHeat\030\004 \001(\005\022\034\n\024r" +
      "eplacementThreshold\030\005 \001(\005\022\024\n\014reactorPaus" +
      "e\030\006 \001(\005\"\344\004\n\020SimulationResult\022\r\n\005start\030\001 " +
      "\001(\003\022\013\n\003end\030\002 \001(\003\022\017\n\007totalEU\030\003 \001(\003\022\017\n\007min" +
      "EUpT\030\004 \001(\005\022\017\n\007maxEUpT\030\005 \001(\005\022\017\n\007totalHU\030\006" +
      " \001(\003\022\017\n\007minHUpS\030\007 \001(\005\022\017\n\007maxHUpS\030\010 \001(\005\022\025" +
      "\n\rtotalTempSecs\030\t \001(\003\022\017\n\007minTemp\030\n \001(\005\022\017" +
      "\n\007maxTemp\030\013 \001(\005\022\030\n\020totalHullHeating\030\014 \001(" +
      "\003\022\030\n\020totalHullCooling\030\r \001(\003\022\017\n\007simTime\030\016" +
      " \001(\005\022\022\n\nactiveTime\030\017 \001(\005\022\022\n\npausedTime\030\020" +
      " \001(\005\022\031\n\014timeToNormal\030\021 \001(\005H\000\210\001\001\022\027\n\ntimeT" +
      "oBurn\030\022 \001(\005H\001\210\001\001\022\034\n\017timeToEvaporate\030\023 \001(" +
      "\005H\002\210\001\001\022\027\n\ntimeToHurt\030\024 \001(\005H\003\210\001\001\022\027\n\ntimeT" +
      "oLava\030\025 \001(\005H\004\210\001\001\022\032\n\rtimeToExplode\030\026 \001(\005H" +
      "\005\210\001\001\022$\n\ncomponents\030\027 \003(\0132\020.ComponentResu" +
      "ltB\017\n\r_timeToNormalB\r\n\013_timeToBurnB\022\n\020_t" +
      "imeToEvaporateB\r\n\013_timeToHurtB\r\n\013_timeTo" +
      "LavaB\020\n\016_timeToExplode\"\323\001\n\017ComponentResu" +
      "lt\022\r\n\005index\030\001 \001(\005\022\027\n\017totalAirHeating\030\002 \001" +
      "(\003\022\030\n\020totalHullHeating\030\003 \001(\003\022\030\n\020totalHul" +
      "lCooling\030\004 \001(\003\022\025\n\rtotalTempSecs\030\005 \001(\003\022\017\n" +
      "\007minTemp\030\006 \001(\005\022\017\n\007maxTemp\030\007 \001(\005\022\024\n\014repla" +
      "ceCount\030\010 \001(\005\022\025\n\rtotalEUOutput\030\t \001(\003\"k\n\014" +
      "CustomResult\022\014\n\004i18n\030\001 \001(\t\022\025\n\013float_valu" +
      "e\030\002 \001(\002H\000\022\024\n\nlong_value\030\003 \001(\003H\000\022\026\n\014strin" +
      "g_value\030\004 \001(\tH\000B\010\n\006ValuesBS\n@com.recursi" +
      "ve_pineapple.nuclear_horizons.reactors.t" +
      "ile.simulatorB\017SimulatorProtosb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_SimulationConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SimulationConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SimulationConfig_descriptor,
        new java.lang.String[] { "Pulsed", "Automated", "Fluid", "InitialHeat", "OnPulse", "OffPulse", "SuspendTemp", "ResumeTemp", "MaxSimulationTicks", "Components", });
    internal_static_ComponentConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ComponentConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ComponentConfig_descriptor,
        new java.lang.String[] { "Index", "Item", "HasAutomation", "InitialHeat", "ReplacementThreshold", "ReactorPause", });
    internal_static_SimulationResult_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SimulationResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SimulationResult_descriptor,
        new java.lang.String[] { "Start", "End", "TotalEU", "MinEUpT", "MaxEUpT", "TotalHU", "MinHUpS", "MaxHUpS", "TotalTempSecs", "MinTemp", "MaxTemp", "TotalHullHeating", "TotalHullCooling", "SimTime", "ActiveTime", "PausedTime", "TimeToNormal", "TimeToBurn", "TimeToEvaporate", "TimeToHurt", "TimeToLava", "TimeToExplode", "Components", });
    internal_static_ComponentResult_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ComponentResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ComponentResult_descriptor,
        new java.lang.String[] { "Index", "TotalAirHeating", "TotalHullHeating", "TotalHullCooling", "TotalTempSecs", "MinTemp", "MaxTemp", "ReplaceCount", "TotalEUOutput", });
    internal_static_CustomResult_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CustomResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CustomResult_descriptor,
        new java.lang.String[] { "I18N", "FloatValue", "LongValue", "StringValue", "Values", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
